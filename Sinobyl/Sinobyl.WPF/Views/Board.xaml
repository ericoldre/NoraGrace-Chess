<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
			 xmlns:sys="clr-namespace:System;assembly=System"
			 xmlns:engine="clr-namespace:Sinobyl.Engine;assembly=Sinobyl.Engine"
             xmlns:vm="clr-namespace:Sinobyl.WPF.ViewModels"
             x:Class="Sinobyl.WPF.Views.Board" 
             xmlns:convert="clr-namespace:Sinobyl.WPF.Converters"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:drag="clr-namespace:Sinobyl.WPF.DragHelper"
             xmlns:views="clr-namespace:Sinobyl.WPF.Views"
             mc:Ignorable="d" 
    
             d:DesignHeight="500" d:DesignWidth="500"
			 d:DataContext="{Binding Source={StaticResource designBoard}}">
	<UserControl.Resources>

        <ObjectDataProvider MethodName="GetDesignBoardVM" ObjectType="{x:Type vm:BoardVM}" x:Key="designBoard">

        </ObjectDataProvider>

        <convert:PositionToCoord x:Key="PositionToCoord" />

        <drag:DragDropContext x:Key="dragDropContext"></drag:DragDropContext>

        <DataTemplate x:Key="BoardSquareTemplate">
            <Grid Name="grid" Background="#FF909573" drag:DragDropProperties.DropTarget="{Binding}">
                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Hidden">
                    <TextBlock Text="{Binding Path=(drag:DragDropProperties.IsActivePotentialDropTarget), ElementName=grid}"/>
                    <TextBlock Text="{Binding Path=(drag:DragDropProperties.IsActiveValidDropTarget), ElementName=grid}"/>

                </StackPanel>
                <Border x:Name="highlightBorder" BorderBrush="Yellow" BorderThickness="2" Opacity="0" CornerRadius="8,8,8,8"></Border>
            </Grid>

            <DataTemplate.Triggers>
                <DataTrigger Value="True" Binding="{Binding Path=IsLight}">
                    <Setter TargetName="grid" Property="Background" Value="#FFB0B593"></Setter>
                </DataTrigger>

                <DataTrigger Binding="{Binding Path=(drag:DragDropProperties.IsActiveSelectedDropTarget), ElementName=grid}" Value="True">
                    <DataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard x:Name="asdf">
                                <DoubleAnimation Storyboard.TargetName="highlightBorder" Storyboard.TargetProperty="Opacity" From="0" To=".5" Duration="0:0:0.2">
                                </DoubleAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard x:Name="asdfw">
                                <DoubleAnimation Storyboard.TargetName="highlightBorder" Storyboard.TargetProperty="Opacity" From=".5" To="0" Duration="0:0:0.2">
                                </DoubleAnimation>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.ExitActions>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <DataTemplate x:Key="PieceTemplate">
        	<Grid>
        		<Rectangle Name="rect" StrokeDashArray="0.5 1.0" Stroke="#FFE2ED14" StrokeThickness="2" RadiusX="10" RadiusY="10" Margin="2" Visibility="Hidden"/>
                
				<Image Name="img" Source="/Sinobyl.WPF;component/Images/Pieces/Alpha/300wp.png" 
                       drag:DragDropProperties.DragSource="{Binding}"
                        >
					<Image.RenderTransform>
                        
                        <TranslateTransform X="{Binding Path=(drag:DragDropProperties.DragOffset).X, ElementName=img}" Y="{Binding Path=(drag:DragDropProperties.DragOffset).Y, ElementName=img}"/>
					</Image.RenderTransform>
				</Image>  
			</Grid>
            
            <DataTemplate.Triggers>
                
                <DataTrigger Binding="{Binding Path=CanDrag}" Value="True">
                    <Setter TargetName="img" Property="Cursor" Value="Hand"/>
					<Setter TargetName="rect" Property="Visibility" Value="Visible"/>
                </DataTrigger>
                
                <DataTrigger Binding="{Binding Path=Piece}">
                    <DataTrigger.Value>
                        <engine:ChessPiece>WPawn</engine:ChessPiece>
                    </DataTrigger.Value>
                    <Setter TargetName="img" Property="Source" Value="/Sinobyl.WPF;component/Images/Pieces/Alpha/300wp.png"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Piece}">
                    <DataTrigger.Value>
                        <engine:ChessPiece>WBishop</engine:ChessPiece>
                    </DataTrigger.Value>
                    <Setter TargetName="img" Property="Source" Value="/Sinobyl.WPF;component/Images/Pieces/Alpha/300wb.png"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Piece}">
                    <DataTrigger.Value>
                        <engine:ChessPiece>WKnight</engine:ChessPiece>
                    </DataTrigger.Value>
                    <Setter TargetName="img" Property="Source" Value="/Sinobyl.WPF;component/Images/Pieces/Alpha/300wn.png"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Piece}">
                    <DataTrigger.Value>
                        <engine:ChessPiece>WRook</engine:ChessPiece>
                    </DataTrigger.Value>
                    <Setter TargetName="img" Property="Source" Value="/Sinobyl.WPF;component/Images/Pieces/Alpha/300wr.png"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Piece}">
                    <DataTrigger.Value>
                        <engine:ChessPiece>WQueen</engine:ChessPiece>
                    </DataTrigger.Value>
                    <Setter TargetName="img" Property="Source" Value="/Sinobyl.WPF;component/Images/Pieces/Alpha/300wq.png"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Piece}">
                    <DataTrigger.Value>
                        <engine:ChessPiece>WKing</engine:ChessPiece>
                    </DataTrigger.Value>
                    <Setter TargetName="img" Property="Source" Value="/Sinobyl.WPF;component/Images/Pieces/Alpha/300wk.png"></Setter>
                </DataTrigger>
                <!-- black pieces-->
                <DataTrigger Binding="{Binding Path=Piece}">
                    <DataTrigger.Value>
                        <engine:ChessPiece>BPawn</engine:ChessPiece>
                    </DataTrigger.Value>
                    <Setter TargetName="img" Property="Source" Value="/Sinobyl.WPF;component/Images/Pieces/Alpha/300bp.png"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Piece}">
                    <DataTrigger.Value>
                        <engine:ChessPiece>BBishop</engine:ChessPiece>
                    </DataTrigger.Value>
                    <Setter TargetName="img" Property="Source" Value="/Sinobyl.WPF;component/Images/Pieces/Alpha/300bb.png"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Piece}">
                    <DataTrigger.Value>
                        <engine:ChessPiece>BKnight</engine:ChessPiece>
                    </DataTrigger.Value>
                    <Setter TargetName="img" Property="Source" Value="/Sinobyl.WPF;component/Images/Pieces/Alpha/300bn.png"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Piece}">
                    <DataTrigger.Value>
                        <engine:ChessPiece>BRook</engine:ChessPiece>
                    </DataTrigger.Value>
                    <Setter TargetName="img" Property="Source" Value="/Sinobyl.WPF;component/Images/Pieces/Alpha/300br.png"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Piece}">
                    <DataTrigger.Value>
                        <engine:ChessPiece>BQueen</engine:ChessPiece>
                    </DataTrigger.Value>
                    <Setter TargetName="img" Property="Source" Value="/Sinobyl.WPF;component/Images/Pieces/Alpha/300bq.png"></Setter>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Piece}">
                    <DataTrigger.Value>
                        <engine:ChessPiece>BKing</engine:ChessPiece>
                    </DataTrigger.Value>
                    <Setter TargetName="img" Property="Source" Value="/Sinobyl.WPF;component/Images/Pieces/Alpha/300bk.png"></Setter>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <ItemsPanelTemplate x:Key="CanvasPanelTemplate">
			<Canvas IsItemsHost="True"></Canvas>
        </ItemsPanelTemplate>

        
        <Style x:Key="BoardSquareContainerStyle" TargetType="{x:Type FrameworkElement}">
            <Setter Property="Canvas.Top">
                <Setter.Value>
                    <MultiBinding Converter="{StaticResource PositionToCoord}" ConverterParameter="Top">
                        <Binding Path="Position"></Binding>
                        <Binding Path="ActualWidth" ElementName="LayoutRoot"></Binding>
                        <Binding Path="ActualHeight" ElementName="LayoutRoot"></Binding>
                    </MultiBinding>
                </Setter.Value>
            </Setter>
            <Setter Property="Canvas.Left">
                <Setter.Value>
                    <MultiBinding Converter="{StaticResource PositionToCoord}" ConverterParameter="Left">
                        <Binding Path="Position"></Binding>
                        <Binding Path="ActualWidth" ElementName="LayoutRoot"></Binding>
                        <Binding Path="ActualHeight" ElementName="LayoutRoot"></Binding>
                    </MultiBinding>
                </Setter.Value>
            </Setter>
            <Setter Property="Width">
                <Setter.Value>
                    <MultiBinding Converter="{StaticResource PositionToCoord}" ConverterParameter="Width">
                        <Binding Path="Position"></Binding>
                        <Binding Path="ActualWidth" ElementName="LayoutRoot"></Binding>
                        <Binding Path="ActualHeight" ElementName="LayoutRoot"></Binding>
                    </MultiBinding>
                </Setter.Value>
            </Setter>
            <Setter Property="Height">
                <Setter.Value>
                    <MultiBinding Converter="{StaticResource PositionToCoord}" ConverterParameter="Height">
                        <Binding Path="Position"></Binding>
                        <Binding Path="ActualWidth" ElementName="LayoutRoot"></Binding>
                        <Binding Path="ActualHeight" ElementName="LayoutRoot"></Binding>
                    </MultiBinding>
                </Setter.Value>
            </Setter>
        </Style>



    </UserControl.Resources>
    <Canvas x:Name="LayoutRoot" >
        
        
        <ItemsControl x:Name="Squares" 
			ItemsSource="{Binding Squares}" 
			ItemTemplate="{DynamicResource BoardSquareTemplate}" 
			ItemsPanel="{DynamicResource CanvasPanelTemplate}" 
			ItemContainerStyle="{DynamicResource BoardSquareContainerStyle}" Margin="0"/>

        <ItemsControl x:Name="Pieces" 
			ItemsSource="{Binding Pieces}" 
			ItemTemplate="{DynamicResource PieceTemplate}" 
			ItemsPanel="{DynamicResource CanvasPanelTemplate}" 
			ItemContainerStyle="{DynamicResource BoardSquareContainerStyle}" Margin="0"/>





    </Canvas>
</UserControl>
